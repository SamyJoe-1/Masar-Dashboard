Always show details

Copy
# Create a README.md file with setup and deployment instructions
readme_content = """
# Resume Matcher API

🚀 A FastAPI-based CV/resume matcher that scores uploaded resumes against a given job description and returns relevant metadata.

## 📦 Features

- Upload multiple resumes (PDFs)
- Extract and process resume information
- Match resumes to job descriptions
- Score and categorize candidates (Junior/Mid/Senior)
- Arabic decision label ✅ مقبول / ❌ مرفوض

---

## 🧰 Requirements

- Python 3.8+
- FastAPI
- Uvicorn
- All dependencies listed in `requirements.txt`

---

## ⚙️ Local Development Setup

1. **Clone the repo:**

   ```bash
   git clone <your-repo-url>
   cd resume_matcher_project
Create virtual environment & activate:

bash
Always show details

Copy
python3 -m venv venv
source venv/bin/activate  # On Windows: venv\\Scripts\\activate
Install dependencies:

bash
Always show details

Copy
pip install -r requirements.txt
Run the app locally:

bash
Always show details

Copy
uvicorn main:app --reload
Open in browser:

arduino
Always show details

Copy
http://localhost:8000
🚀 Deploying on FastComet (VPS)
Upload your project to FastComet VPS via FTP or Git.

SSH into your server:

bash
Always show details

Copy
ssh your-user@your-server-ip
Navigate to the project directory and create a virtual environment.

Install dependencies:

bash
Always show details

Copy
pip install -r requirements.txt
Run the API:

bash
Always show details

Copy
uvicorn main:app --host 0.0.0.0 --port 8000
(Optional) Set up NGINX reverse proxy and a domain/subdomain for production use.

📁 Project Structure
css
Always show details

Copy
resume_matcher_project/
├── main.py
├── matcher.py
├── processor.py
├── requirements.txt
├── README.md
└── (other files)
📫 API Endpoint
POST /match-cvs
Form data:

job_description: string

files: one or more PDF files

Response: JSON with matched info, score, verdict, etc.

📝 Example cURL Request
bash
Always show details

Copy
curl -X 'POST' \\
  'http://localhost:8000/match-cvs' \\
  -F 'job_description=Backend Developer with Python' \\
  -F 'files=@sample_resume.pdf'
🛠 Maintainer
Made with ❤️ by Your Team
"""

readme_path = "/mnt/data/README.md"
with open(readme_path, "w") as f:
f.write(readme_content.strip())
